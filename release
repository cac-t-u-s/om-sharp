#!/bin/bash

# 32bits:
# LWARCH=32-bit
# LWEXEC=lispworks-7-0-0-x86-darwin

LWARCH=64-bit
LWVERSION=7.1
LWEXEC=lispworks-7-1-0-amd64-darwin

OM_VERSION="0.1.17"
BUILD_FOLDER="BUILD"
APP_NAME="o7"
ZIP_NAME="$APP_NAME"-"$OM_VERSION"
DMG_NAME="$APP_NAME"-"$OM_VERSION"-macOS

deliver_app()
{
echo "***************************************************"
echo "COMPILING STANDALONE EXE"
echo "***************************************************"

	rm -rf ./om/*.app/
	/Applications/LispWorks\ $LWVERSION\ \($LWARCH\)/LispWorks\ \($LWARCH\).app/Contents/MacOS/$LWEXEC -build ./om/build/deliver.lisp
}


# deliver_app MUST have been called before..
pack_app()
{
echo "***************************************************"
echo "Packing $APP_FOLDER"
echo "***************************************************"

	rm -Rf $BUILD_FOLDER
	mkdir $BUILD_FOLDER
	cp -R om/"$APP_NAME".app $BUILD_FOLDER
	
	echo "=> PACKED IN BUILD FOLDER!"
}

# pack_app MUST have been called before..
set_fonts()
{   
   cp "$BUILD_FOLDER"/"$APP_NAME".app/Contents/Resources/fonts/mac/* "$BUILD_FOLDER"/"$APP_NAME".app/Contents/Resources/fonts/
   rm -rf "$BUILD_FOLDER"/"$APP_NAME".app/Contents/Resources/fonts/
   	 	   
   cp "$BUILD_FOLDER"/"$APP_NAME".app/Contents/Info.plist .	   
   defaults write $(pwd)/Info.plist ATSApplicationFontsPath -string "fonts/"
   mv ./Info.plist "$BUILD_FOLDER"/"$APP_NAME".app/Contents/Info.plist
}

# pack_app MUST have been called before..
create_simple_dmg()
{
echo "***************************************************"
echo "Preparing DMG distribution for $APP_FOLDER"
echo "***************************************************"

	cd $BUILD_FOLDER
	rm -f "$DMG_NAME".dmg	
	rm -rf _DMG
	mkdir _DMG
	cp -R "$APP_NAME".app _DMG/
	#cp "README.txt" "$BUILD_FOLDER"/_DMG/
	#ln -s /Applications/ _DMG/Applications
	
	hdiutil create -fs HFS+ -volname $DMG_NAME -srcfolder _DMG "$DMG_NAME".dmg
	rm -rf _DMG
	cd ..
}

zip_release()
{
	cd $BUILD_FOLDER
	rm -f "$ZIP_NAME".zip
	rm -rf "$APP_NAME"
	mkdir "$APP_NAME"
	cp -R "$APP_NAME".app "$APP_NAME"/
	zip -r "$ZIP_NAME".zip "$APP_NAME"  
	rm -rf "$APP_NAME"
	cd ..
}

sign_release()
{
	./codesign-om7
}

change_permission()
{
    # this function change the permission for a given folder
    # $1 : the folder
    echo "Setting permissions for $1"
    sudo chown -R root "$1"
    sudo chgrp -R admin "$1"
    sudo chmod -R o+rx "$1"
    sudo chmod -R ug+rwx "$1"
}

#=============================
# MAIN SCRIPT
#=============================

if 		[ "$1" = "-d" ]; 	then 	deliver_app
elif	[ "$1" = "-p" ];	then	pack_app; set_fonts
elif	[ "$1" = "-dp" ];	then	deliver_app; pack_app; set_fonts
elif	[ "$1" = "-dmg" ];	then	create_simple_dmg
elif	[ "$1" = "-zip" ];	then	zip_release
elif	[ "$1" = "-sign" ];	then	sign_release	
elif	[ "$1" = "-dpd" ];	then	deliver_app; pack_app; set_fonts;  sign_release;create_simple_dmg
elif	[ "$1" = "-dpz" ];	then	deliver_app; pack_app; set_fonts; sign_release; zip_release
elif	[ "$1" = "-all" ];	then	deliver_app; pack_app; set_fonts; sign_release; zip_release; create_simple_dmg
else 	
	echo "Dont'know what to do! :("	
	echo "Options:"
	echo "-d = deliver app"
	echo "-p = pack delivered app as a separate folder (including fonts) "
	echo "-dp = deliver and pack"
	echo "-sign = sign delivered package"
	echo "-zip = create ZIP from previously packed app"
	echo "-dmg = create DMG from previously packed app"
	echo "-dpd = deliver, pack, sign and create DMG"
	echo "-dpz = deliver, pack, sign and zip"
	echo "-all = deliver, pack, SIGN and create zip + DGM"
fi

exit 0







