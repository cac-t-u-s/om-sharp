
(:patch
 (:name "05-sdif-write-sdif-file")
 (:doc "")
 (:info
  (:created "2019/09/23 12:15:29")
  (:modified "2021/06/13 23:40:35")
  (:by "om-sharp")
  (:version 1.0301))
 (:window (:size (1038 673)) (:position (642 345)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:comment
   (:x 533)
   (:y 573)
   (:w 73)
   (:h 23)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font-or-nil (:font nil) (:t-or-nil nil)))
   (:align nil)
   (:text "(eval here)")
   (:id 0))
  (:comment
   (:x 20)
   (:y 80)
   (:w 156)
   (:h 76)
   (:fgcolor
    (:color-or-nil
     (:color
      (:color
       0.33558744192123413D0
       0.5159960389137268D0
       0.37124690413475037D0
       1.0D0))
     (:t-or-nil t)))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Calibri") (:size 14) (:style :italic)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "Here is a simplified example of how to write data in an SDIF file using the OM SDIF classes")
   (:id 1))
  (:box
   (:type :value)
   (:reference single-float)
   (:group-id nil)
   (:name "aux 2")
   (:x 525)
   (:y 81)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0.0)
   (:id 2))
  (:box
   (:type :function)
   (:reference om-random)
   (:group-id nil)
   (:name "om-random")
   (:x 513)
   (:y 129)
   (:w 103)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LOW")
     (:value 0.0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "HIGH")
     (:value 10.0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:comment
   (:x 59)
   (:y 218)
   (:w 117)
   (:h 38)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font-or-nil (:font nil) (:t-or-nil nil)))
   (:align nil)
   (:text "random time tags... :(")
   (:id 4))
  (:comment
   (:x 244)
   (:y 390)
   (:w 117)
   (:h 38)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font-or-nil (:font nil) (:t-or-nil nil)))
   (:align nil)
   (:text "Repeat this N times")
   (:id 5))
  (:comment
   (:x 324)
   (:y 362)
   (:w 132)
   (:h 23)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font-or-nil (:font nil) (:t-or-nil nil)))
   (:align nil)
   (:text "Create 1 SDIF frame")
   (:id 6))
  (:comment
   (:x 324)
   (:y 94)
   (:w 147)
   (:h 23)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font-or-nil (:font nil) (:t-or-nil nil)))
   (:align nil)
   (:text "Create 2 SDIF Matrices")
   (:id 7))
  (:comment
   (:x 691)
   (:y 295)
   (:w 135)
   (:h 38)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font-or-nil (:font nil) (:t-or-nil nil)))
   (:align nil)
   (:text "Declare 3 new SDIF types")
   (:id 8))
  (:comment
   (:x 20)
   (:y 38)
   (:w 200)
   (:h 30)
   (:fgcolor (:color 0.19215687 0.2627451 0.42352942 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Calibri") (:size 18) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "Write an SDIF File")
   (:id 9))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "aux3")
   (:x 431)
   (:y 398)
   (:w 69)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "test.sdif")
   (:id 10))
  (:box
   (:type :function)
   (:reference outfile)
   (:group-id nil)
   (:name "outfile")
   (:x 429)
   (:y 440)
   (:w 72)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NAME")
     (:value "")
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 11))
  (:box
   (:type :object)
   (:reference sdiffile)
   (:group-id nil)
   (:name "SDIFFILE")
   (:x 400)
   (:y 552)
   (:w 130)
   (:h 66)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil)))
   (:outputs (:output (:name "SELF") (:reactive nil)))
   (:window (:size (500 500)) (:position (232 184)))
   (:edition-params)
   (:value
    (:object
     (:class sdiffile)
     (:add-slots
      ((:file-map
        (:list
         (:fstream-desc
          (:id 0)
          (:fsig "XFRA")
          (:tmin 0.22322416305541992D0)
          (:tmax 9.667390823364258D0)
          (:nf 60)
          (:matrices
           (:list
            (:mstream-desc
             (:msig "XNFO")
             (:fields ("Info"))
             (:rmax 1)
             (:tmin 0.22322416305541992D0)
             (:tmax 9.667390823364258D0)
             (:nf 60))
            (:mstream-desc
             (:msig "XMAT")
             (:fields ("par1" "par2" "par3"))
             (:rmax 10)
             (:tmin 0.22322416305541992D0)
             (:tmax 9.667390823364258D0)
             (:nf 60)))))))
       (:file-pathname
        (:pathname
         (:directory
          (:relative :up :up :up :up :up :up "OM" "out-files"))
         (:device :unspecific)
         (:host :unspecific)
         (:name "test")
         (:type "sdif")))))))
   (:id 12))
  (:box
   (:type :function)
   (:reference om-random)
   (:group-id nil)
   (:name "om-random")
   (:x 104)
   (:y 253)
   (:w 103)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LOW")
     (:value 0.0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "HIGH")
     (:value 10.0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 13))
  (:box
   (:type :special)
   (:reference repeat-n)
   (:group-id nil)
   (:name "repeat-n")
   (:x 142)
   (:y 440)
   (:w 91)
   (:h 28)
   (:color
    (:color-or-nil (:color (:color 0.82 0.85 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :left)
   (:lock nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "self")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "num")
     (:value 60)
     (:reactive nil)))
   (:outputs (:output (:name "collected results") (:reactive nil)))
   (:id 14))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 725)
   (:y 425)
   (:w 54)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :optional) (:name "x") (:value nil) (:reactive nil))
    (:input (:type :optional) (:name "x") (:value nil) (:reactive nil))
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 15))
  (:box
   (:type :object)
   (:reference sdiftype)
   (:group-id nil)
   (:name "SDIFTYPE")
   (:x 813)
   (:y 364)
   (:w 85)
   (:h 49)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :text)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "STRUCT")
     (:value m)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SIGNATURE")
     (:value "XMAT")
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DESCRIPTION")
     (:value (:list "par1" "par2" "par3"))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "STRUCT") (:reactive nil))
    (:output (:name "SIGNATURE") (:reactive nil))
    (:output (:name "DESCRIPTION") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class sdiftype)
     (:slots
      ((:struct m)
       (:signature "XMAT")
       (:description (:list "par1" "par2" "par3"))))))
   (:id 16))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "aux2")
   (:x 372)
   (:y 171)
   (:w 56)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "XMAT")
   (:id 17))
  (:box
   (:type :object)
   (:reference sdiftype)
   (:group-id nil)
   (:name "SDIFTYPE")
   (:x 735)
   (:y 364)
   (:w 70)
   (:h 50)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :text)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "STRUCT")
     (:value m)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SIGNATURE")
     (:value "XNFO")
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DESCRIPTION")
     (:value (:list "Info"))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "STRUCT") (:reactive nil))
    (:output (:name "SIGNATURE") (:reactive nil))
    (:output (:name "DESCRIPTION") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class sdiftype)
     (:slots
      ((:struct m)
       (:signature "XNFO")
       (:description (:list "Info"))))))
   (:id 18))
  (:box
   (:type :object)
   (:reference sdiftype)
   (:group-id nil)
   (:name "SDIFTYPE")
   (:x 625)
   (:y 361)
   (:w 105)
   (:h 53)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :text)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "STRUCT")
     (:value f)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SIGNATURE")
     (:value "XFRA")
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DESCRIPTION")
     (:value (:list (:list "XNFO" "InfoMat") (:list "XMAT" "datamat")))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "STRUCT") (:reactive nil))
    (:output (:name "SIGNATURE") (:reactive nil))
    (:output (:name "DESCRIPTION") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class sdiftype)
     (:slots
      ((:struct f)
       (:signature "XFRA")
       (:description
        (:list (:list "XNFO" "InfoMat") (:list "XMAT" "datamat")))))))
   (:id 19))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 244)
   (:y 287)
   (:w 54)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :optional) (:name "x") (:value nil) (:reactive nil))
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 20))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "aux1")
   (:x 216)
   (:y 126)
   (:w 55)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "XNFO")
   (:id 21))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux")
   (:x 255)
   (:y 94)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list (:list 4)))
   (:id 22))
  (:box
   (:type :object)
   (:reference sdifmatrix)
   (:group-id nil)
   (:name "SDIFMATRIX")
   (:x 199)
   (:y 171)
   (:w 100)
   (:h 62)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MATRIXTYPE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DATA")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "MATRIXTYPE") (:reactive nil))
    (:output (:name "DATA") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class sdifmatrix)
     (:slots
      ((:field-names nil)
       (:data (:list (:list 4)))
       (:matrixtype "XNFO")))))
   (:id 23))
  (:box
   (:type :object)
   (:reference sdifframe)
   (:group-id nil)
   (:name "SDIFFRAME")
   (:x 146)
   (:y 322)
   (:w 138)
   (:h 63)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :text)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FRAMETYPE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FTIME")
     (:value 0.0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "STREAMID")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMATRIX")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "FRAMETYPE") (:reactive nil))
    (:output (:name "FTIME") (:reactive nil))
    (:output (:name "STREAMID") (:reactive nil))
    (:output (:name "LMATRIX") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class sdifframe)
     (:slots
      ((:onset 6009)
       (:item-internal-time nil)
       (:item-type nil)
       (:attributes nil)
       (:frametype "XFRA")
       (:ftime 6.009102)
       (:streamid 0)
       (:lmatrix
        (:list
         (:object
          (:class sdifmatrix)
          (:slots
           ((:field-names nil)
            (:data (:list (:list 4)))
            (:matrixtype "XNFO"))))
         (:object
          (:class sdifmatrix)
          (:slots
           ((:field-names nil)
            (:data
             (:list
              (:list
               8.9390955
               5.255827
               5.3311815
               9.539746
               7.0168424
               4.879768
               2.3229945
               7.5281725
               2.4186218
               5.923315)
              (:list 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0)
              (:list
               0
               37.037037
               58.190476
               46.66667
               40.96889
               27.191115
               13.413336
               38.47473
               41.72222
               100.0)))
            (:matrixtype "XMAT"))))))))))
   (:id 24))
  (:box
   (:type :object)
   (:reference sdifmatrix)
   (:group-id nil)
   (:name "SDIFMATRIX1")
   (:x 324)
   (:y 203)
   (:w 163)
   (:h 92)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MATRIXTYPE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DATA")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "MATRIXTYPE") (:reactive nil))
    (:output (:name "DATA") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class sdifmatrix)
     (:slots
      ((:field-names nil)
       (:data
        (:list
         (:list
          8.9390955
          5.255827
          5.3311815
          9.539746
          7.0168424
          4.879768
          2.3229945
          7.5281725
          2.4186218
          5.923315)
         (:list 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0)
         (:list
          0
          37.037037
          58.190476
          46.66667
          40.96889
          27.191115
          13.413336
          38.47473
          41.72222
          100.0)))
       (:matrixtype "XMAT")))))
   (:id 25))
  (:box
   (:type :object)
   (:reference bpf)
   (:group-id nil)
   (:name "BPF")
   (:x 785)
   (:y 41)
   (:w 172)
   (:h 65)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "X-POINTS")
     (:value (:list 0 10))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-POINTS")
     (:value (:list 0 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "decimals")
     (:value 0)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "X-POINTS") (:reactive nil))
    (:output (:name "Y-POINTS") (:reactive nil))
    (:output (:name "decimals") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class bpf)
     (:slots
      ((:onset 0)
       (:duration 100)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:action nil)
       (:color (:color 0 0 0 1.0))
       (:decimals 0)
       (:x-points (:list 0 18 32 40 42 67 78 94 100))
       (:y-points (:list 0 60 54 10 44 13 39 43 100))))
     (:add-slots ((:name "BPF")))))
   (:id 26))
  (:box
   (:type :special)
   (:reference repeat-n)
   (:group-id nil)
   (:name "repeat-n")
   (:x 542)
   (:y 164)
   (:w 91)
   (:h 28)
   (:color
    (:color-or-nil (:color (:color 0.82 0.85 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :left)
   (:lock nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "self")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "num")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "collected results") (:reactive nil)))
   (:id 27))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 644)
   (:y 57)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 10)
   (:id 28))
  (:box
   (:type :function)
   (:reference make-list)
   (:group-id nil)
   (:name "make-list")
   (:x 673)
   (:y 164)
   (:w 89)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SIZE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "initial-element")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 29))
  (:box
   (:type :value)
   (:reference single-float)
   (:group-id nil)
   (:name "value box")
   (:x 714)
   (:y 129)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1.0)
   (:id 30))
  (:box
   (:type :function)
   (:reference om-sample)
   (:group-id nil)
   (:name "om-sample")
   (:x 784)
   (:y 164)
   (:w 100)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "NBS-SR")
     (:value 1)
     (:reactive nil)))
   (:outputs
    (:output (:name "out0") (:reactive nil))
    (:output (:name "out1") (:reactive nil))
    (:output (:name "out2") (:reactive nil)))
   (:id 31))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 691)
   (:y 207)
   (:w 54)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :optional) (:name "x") (:value nil) (:reactive nil))
    (:input (:type :optional) (:name "x") (:value nil) (:reactive nil))
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 32))
  (:box
   (:type :value)
   (:reference single-float)
   (:group-id nil)
   (:name "value box")
   (:x 568)
   (:y 81)
   (:w 39)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 10.0)
   (:id 33))
  (:box
   (:type :function)
   (:reference write-sdif-file)
   (:group-id nil)
   (:name "write-sdif-file")
   (:x 413)
   (:y 515)
   (:w 113)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FRAMES")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "outpath")
     (:value "out.sdif")
     (:reactive nil))
    (:input (:type :key) (:name "types") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 34))
  (:box
   (:type :function)
   (:reference sort-list)
   (:group-id nil)
   (:name "sort-list")
   (:x 224)
   (:y 478)
   (:w 81)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LST")
     (:value nil)
     (:reactive nil))
    (:input (:type :key) (:name "key") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 35))
  (:box
   (:type :function)
   (:reference ftime)
   (:group-id nil)
   (:name "ftime")
   (:x 269)
   (:y 440)
   (:w 66)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda :lambda)
   (:inputs
    (:input
     (:type :standard)
     (:name "SDIFFRAME")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 36))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 184)
   (:y 390)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 60)
   (:id 37))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 663)
   (:y 329)
   (:w 53)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "XFRA")
   (:id 38))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 749)
   (:y 329)
   (:w 55)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "XNFO")
   (:id 39))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 837)
   (:y 329)
   (:w 57)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "XMAT")
   (:id 40))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 59)
   (:y 301)
   (:w 53)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "XFRA")
   (:id 41))
  (:box
   (:type :value)
   (:reference single-float)
   (:group-id nil)
   (:name "value box")
   (:x 159)
   (:y 203)
   (:w 39)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 10.0)
   (:id 42)))
 (:connections
  (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 0)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 27 :in 0)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 11 :in 0)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 34 :in 1)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 24 :in 2)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 35 :in 0)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 34 :in 2)))
  (:connection (:from (:box 16 :out 0)) (:to (:box 15 :in 2)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 25 :in 1)))
  (:connection (:from (:box 18 :out 0)) (:to (:box 15 :in 1)))
  (:connection (:from (:box 19 :out 0)) (:to (:box 15 :in 0)))
  (:connection (:from (:box 20 :out 0)) (:to (:box 24 :in 4)))
  (:connection (:from (:box 21 :out 0)) (:to (:box 23 :in 1)))
  (:connection (:from (:box 22 :out 0)) (:to (:box 23 :in 2)))
  (:connection (:from (:box 23 :out 0)) (:to (:box 20 :in 0)))
  (:connection (:from (:box 24 :out 0)) (:to (:box 14 :in 0)))
  (:connection (:from (:box 25 :out 0)) (:to (:box 20 :in 1)))
  (:connection (:from (:box 26 :out 0)) (:to (:box 31 :in 0)))
  (:connection (:from (:box 27 :out 0)) (:to (:box 32 :in 0)))
  (:connection (:from (:box 28 :out 0)) (:to (:box 27 :in 1)))
  (:connection (:from (:box 28 :out 0)) (:to (:box 29 :in 0)))
  (:connection (:from (:box 28 :out 0)) (:to (:box 31 :in 1)))
  (:connection (:from (:box 29 :out 0)) (:to (:box 32 :in 1)))
  (:connection (:from (:box 30 :out 0)) (:to (:box 29 :in 1)))
  (:connection (:from (:box 31 :out 2)) (:to (:box 32 :in 2)))
  (:connection (:from (:box 32 :out 0)) (:to (:box 25 :in 2)))
  (:connection (:from (:box 33 :out 0)) (:to (:box 3 :in 1)))
  (:connection (:from (:box 34 :out 0)) (:to (:box 12 :in 0)))
  (:connection (:from (:box 35 :out 0)) (:to (:box 34 :in 0)))
  (:connection (:from (:box 36 :out 0)) (:to (:box 35 :in 1)))
  (:connection (:from (:box 37 :out 0)) (:to (:box 14 :in 1)))
  (:connection (:from (:box 38 :out 0)) (:to (:box 19 :in 2)))
  (:connection (:from (:box 39 :out 0)) (:to (:box 18 :in 2)))
  (:connection (:from (:box 40 :out 0)) (:to (:box 16 :in 2)))
  (:connection (:from (:box 41 :out 0)) (:to (:box 24 :in 1)))
  (:connection (:from (:box 42 :out 0)) (:to (:box 13 :in 1)))))