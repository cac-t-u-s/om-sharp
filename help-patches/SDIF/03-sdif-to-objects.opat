
(:patch
 (:name "03-sdif-to-objects")
 (:doc "")
 (:info
  (:created "2019/09/23 11:39:16")
  (:modified "2021/07/04 21:47:05")
  (:by "om-sharp")
  (:version 1.03))
 (:window (:size (787 835)) (:position (480 30)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:comment
   (:x 6)
   (:y 701)
   (:w 238)
   (:h 59)
   (:fgcolor (:color 61/255 20/51 74/255 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Calibri") (:size 14) (:style :italic)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "See also the AS->OM function from the Repmus library for alternative conversions from SDIF to chord-seq")
   (:id 0))
  (:box
   (:type :object)
   (:reference chord-seq)
   (:group-id nil)
   (:name "CHORD-SEQ")
   (:x 341)
   (:y 668)
   (:w 233)
   (:h 86)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "loffset")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil))
    (:input (:type :key) (:name "llegato") (:value 0) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "llegato") (:reactive nil)))
   (:window (:size (650 300)) (:position (337 322)))
   (:edition-params (:staff :g))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 4992)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name "CHORD-SEQ")
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:group-ids nil)
       (:lmidic
        (:list
         (:list 6550 5970 7198)
         (:list 7526 7188 6762 5958)
         (:list 7530 7176 6332 5982 6766)
         (:list 6794 5970 7190)
         (:list 6552 5966 9334 7188)
         (:list 6540 5958)
         (:list 7190 5952 7534 6322)
         (:list 7530 7186 6312 5944)
         (:list 5946 7184)
         (:list 6584 5956)
         (:list 7188 6542 5978)
         (:list 7524 7188 5950 6600)
         (:list 7536 7188 5968 6336 6782)
         (:list 6780 6320 7530)
         (:list 6544 6162 7380)
         (:list 7530 7186 5960 6308)
         (:list 7532 5954 6318 7190)
         (:list 7188 6312 7530 5954)
         (:list 5948)
         (:list 7188 5980 6542)
         (:list 7190 6320 7536 6788 5950)
         (:list 6738)
         (:list 6162 7380 6544)
         (:list 5960 7530 6308 7186)
         (:list 7532 5954 7190 6318)
         (:list 7188 5954 6312 7530)
         (:list 5948)
         (:list 7188 5980 6542)
         (:list 7190 6628 7536 6796 5976)
         (:list 7534 6340 6784 7188 5938)
         (:list 6770 5972 6336 7530)
         (:list 6786 6190 7384)
         (:list 7380 6542 6162)
         (:list 5974 7196 7534)
         (:list 7188 5954 7530 6310)
         (:list 5984 6544 7190)
         (:list 5956 7176 6516)
         (:list 7182 6310 6774 7986 7528 5948)
         (:list 6334 7978 5968 7536 6784)
         (:list 6314 7530 6782)
         (:list 6542 6164 7380)
         (:list 7534 7200 5962)
         (:list 7530 7188 6312 5952)
         (:list 5972)
         (:list 7192 6548 5974)
         (:list 7192 6542 5972)
         (:list 7526 6412 7186 5946 6788)
         (:list 7532 5986 6778 6328)
         (:list 5976 7190)
         (:list 6552 5972 7192)
         (:list 6536 5960)
         (:list 6566)
         (:list 7538 7196 6308 5964)
         (:list 7532 7188 6320 5946)
         (:list 5960)
         (:list 7192 6544 5978)
         (:list 7194 6764 7974 6304 7532 5956)
         (:list 7530 6768 6322)))
       (:lonset
        (:list
         24
         84
         203
         279
         429
         475
         542
         666
         743
         771
         808
         948
         970
         1067
         1231
         1361
         1445
         1492
         1584
         1627
         1765
         1870
         1898
         2029
         2113
         2159
         2251
         2294
         2432
         2479
         2531
         2557
         2699
         2827
         2920
         3094
         3216
         3247
         3268
         3338
         3518
         3628
         3698
         3843
         3897
         3953
         4029
         4098
         4180
         4304
         4366
         4424
         4441
         4505
         4638
         4709
         4848
         4888
         4992))
       (:ldur
        (:list
         (:list 60 60 60)
         (:list 119 119 119 119)
         (:list 76 76 76 76 76)
         (:list 150 150 150)
         (:list 46 46 46 46)
         (:list 67 67)
         (:list 125 125 125 125)
         (:list 77 77 77 77)
         (:list 28 28)
         (:list 37 37)
         (:list 140 140 140)
         (:list 22 22 22 22)
         (:list 97 97 97 97 97)
         (:list 164 164 164)
         (:list 130 130 130)
         (:list 84 84 84 84)
         (:list 46 46 46 46)
         (:list 92 92 92 92)
         (:list 43)
         (:list 138 138 138)
         (:list 105 105 105 105 105)
         (:list 28)
         (:list 130 130 130)
         (:list 84 84 84 84)
         (:list 46 46 46 46)
         (:list 92 92 92 92)
         (:list 43)
         (:list 138 138 138)
         (:list 46 46 46 46 46)
         (:list 52 52 52 52 52)
         (:list 26 26 26 26)
         (:list 142 142 142)
         (:list 128 128 128)
         (:list 93 93 93)
         (:list 174 174 174 174)
         (:list 122 122 122)
         (:list 31 31 31)
         (:list 22 22 22 22 22 22)
         (:list 70 70 70 70 70)
         (:list 81 81 81)
         (:list 110 110 110)
         (:list 70 70 70)
         (:list 145 145 145 145)
         (:list 54)
         (:list 56 56 56)
         (:list 75 75 75)
         (:list 70 70 70 70 70)
         (:list 82 82 82 82)
         (:list 124 124)
         (:list 62 62 62)
         (:list 58 58)
         (:list 17)
         (:list 63 63 63 63)
         (:list 134 134 134 134)
         (:list 71)
         (:list 139 139 139)
         (:list 40 40 40 40 40 40)
         (:list 104 104 104)))
       (:lvel
        (:list
         (:list 101 74 78)
         (:list 50 76 69 80)
         (:list 59 51 58 54 101)
         (:list 51 75 80)
         (:list 117 65 51 63)
         (:list 102 51)
         (:list 82 79 65 69)
         (:list 60 64 59 71)
         (:list 63 54)
         (:list 51 53)
         (:list 77 97 78)
         (:list 52 75 79 68)
         (:list 62 53 56 62 111)
         (:list 55 52 50)
         (:list 103 61 53)
         (:list 57 79 79 67)
         (:list 59 83 60 78)
         (:list 63 52 52 71)
         (:list 52)
         (:list 75 78 97)
         (:list 62 58 54 89 69)
         (:list 51)
         (:list 61 53 103)
         (:list 79 57 67 79)
         (:list 59 83 78 60)
         (:list 63 71 52 52)
         (:list 52)
         (:list 75 78 97)
         (:list 74 66 51 77 75)
         (:list 54 58 85 69 71)
         (:list 79 59 57 59)
         (:list 54 58 51)
         (:list 53 104 63)
         (:list 91 91 55)
         (:list 64 69 51 52)
         (:list 77 101 85)
         (:list 81 80 71)
         (:list 72 58 90 50 56 75)
         (:list 58 52 53 59 127)
         (:list 55 54 74)
         (:list 95 61 53)
         (:list 54 84 82)
         (:list 56 69 58 75)
         (:list 51)
         (:list 87 102 77)
         (:list 83 92 83)
         (:list 51 59 65 75 93)
         (:list 55 52 99 56)
         (:list 79 81)
         (:list 106 69 70)
         (:list 93 56)
         (:list 68)
         (:list 55 79 64 80)
         (:list 62 71 64 79)
         (:list 54)
         (:list 85 95 82)
         (:list 68 110 50 57 55 76)
         (:list 56 96 56)))
       (:loffset
        (:list
         (:list 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0)
         (:list 0 0)
         (:list 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0)
         (:list 0 0 0)
         (:list 0 0 0 0 0)
         (:list 0)
         (:list 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0)
         (:list 0 0 0)
         (:list 0 0 0 0 0)
         (:list 0 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0 0)
         (:list 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0)
         (:list 0 0 0)
         (:list 0 0)
         (:list 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0)
         (:list 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0)))
       (:lchan
        (:list
         (:list 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1)
         (:list 1 1)
         (:list 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1)
         (:list 1 1 1)
         (:list 1 1 1 1 1)
         (:list 1)
         (:list 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1)
         (:list 1 1 1)
         (:list 1 1 1 1 1)
         (:list 1 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1 1)
         (:list 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1)
         (:list 1 1 1)
         (:list 1 1)
         (:list 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1)
         (:list 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1)))
       (:lport
        (:list
         (:list nil nil nil)
         (:list nil nil nil nil)
         (:list nil nil nil nil nil)
         (:list nil nil nil)
         (:list nil nil nil nil)
         (:list nil nil)
         (:list nil nil nil nil)
         (:list nil nil nil nil)
         (:list nil nil)
         (:list nil nil)
         (:list nil nil nil)
         (:list nil nil nil nil)
         (:list nil nil nil nil nil)
         (:list nil nil nil)
         (:list nil nil nil)
         (:list nil nil nil nil)
         (:list nil nil nil nil)
         (:list nil nil nil nil)
         (:list nil)
         (:list nil nil nil)
         (:list nil nil nil nil nil)
         (:list nil)
         (:list nil nil nil)
         (:list nil nil nil nil)
         (:list nil nil nil nil)
         (:list nil nil nil nil)
         (:list nil)
         (:list nil nil nil)
         (:list nil nil nil nil nil)
         (:list nil nil nil nil nil)
         (:list nil nil nil nil)
         (:list nil nil nil)
         (:list nil nil nil)
         (:list nil nil nil)
         (:list nil nil nil nil)
         (:list nil nil nil)
         (:list nil nil nil)
         (:list nil nil nil nil nil nil)
         (:list nil nil nil nil nil)
         (:list nil nil nil)
         (:list nil nil nil)
         (:list nil nil nil)
         (:list nil nil nil nil)
         (:list nil)
         (:list nil nil nil)
         (:list nil nil nil)
         (:list nil nil nil nil nil)
         (:list nil nil nil nil)
         (:list nil nil)
         (:list nil nil nil)
         (:list nil nil)
         (:list nil)
         (:list nil nil nil nil)
         (:list nil nil nil nil)
         (:list nil)
         (:list nil nil nil)
         (:list nil nil nil nil nil nil)
         (:list nil nil nil)))
       (:llegato nil)))))
   (:id 1))
  (:comment
   (:x 80)
   (:y 506)
   (:w 251)
   (:h 127)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Calibri") (:size 14) (:style :plain)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "Some SDIF data contain \"chords\" information, typically the 1MRK or 1TRC streams resulting from partial tracking or chord-sequences analyses.
The following functions apprioximate this data to sequences of notes or directly as a chord-seq object.")
   (:id 2))
  (:comment
   (:x 383)
   (:y 87)
   (:w 108)
   (:h 25)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Calibri") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "BPF")
   (:id 3))
  (:box
   (:type :object)
   (:reference bpf)
   (:group-id nil)
   (:name "BPF")
   (:x 442)
   (:y 396)
   (:w 169)
   (:h 74)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname t)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "X-POINTS")
     (:value (:list 0 100))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-POINTS")
     (:value (:list 0 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "decimals")
     (:value 0)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "X-POINTS") (:reactive nil))
    (:output (:name "Y-POINTS") (:reactive nil))
    (:output (:name "decimals") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class bpf)
     (:slots
      ((:onset 0)
       (:duration 2.5)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:action nil)
       (:color (:color 0.0 0.0 0.0 1.0))
       (:decimals 2)
       (:x-points
        (:list
         0.05
         0.05
         0.06
         0.06
         0.07
         0.08
         0.08
         0.09
         0.09
         0.1
         0.1
         0.11
         0.12
         0.12
         0.13
         0.13
         0.14
         0.15
         0.15
         0.16
         0.16
         0.17
         0.17
         0.18
         0.19
         0.19
         0.2
         0.2
         0.21
         0.21
         0.22
         0.23
         0.23
         0.24
         0.24
         0.25
         0.26
         0.26
         0.27
         0.27
         0.28
         0.28
         0.29
         0.3
         0.3
         0.31
         0.31
         0.32
         0.33
         0.33
         0.34
         0.34
         0.35
         0.35
         0.36
         0.37
         0.37
         0.38
         0.38
         0.39
         0.39
         0.4
         0.41
         0.41
         0.42
         0.42
         0.43
         0.44
         0.44
         0.45
         0.45
         0.46
         0.46
         0.47
         0.48
         0.48
         0.49
         0.49
         0.5
         0.51
         0.51
         0.52
         0.52
         0.53
         0.53
         0.54
         0.55
         0.55
         0.56
         0.56
         0.57
         0.57
         0.58
         0.59
         0.59
         0.6
         0.6
         0.61
         0.62
         0.62
         0.63
         0.63
         0.64
         0.64
         0.65
         0.66
         0.66
         0.67
         0.67
         0.68
         0.68
         0.69
         0.7
         0.7
         0.71
         0.71
         0.72
         0.73
         0.73
         0.74
         0.74
         0.75
         0.75
         0.76
         0.77
         0.77
         0.78
         0.78
         0.79
         0.8
         0.8
         0.81
         0.81
         0.82
         0.82
         0.83
         0.84
         0.84
         0.85
         0.85
         0.86
         0.86
         0.87
         0.88
         0.88
         0.89
         0.89
         0.9
         0.91
         0.91
         0.92
         0.92
         0.93
         0.93
         0.94
         0.95
         0.95
         0.96
         0.96
         0.97
         0.98
         0.98
         0.99
         0.99
         1.0
         1.0
         1.01
         1.02
         1.02
         1.03
         1.03
         1.04
         1.04
         1.05
         1.06
         1.06
         1.07
         1.07
         1.08
         1.09
         1.09
         1.1
         1.1
         1.11
         1.11
         1.12
         1.13
         1.13
         1.14
         1.14
         1.15
         1.16
         1.16
         1.17
         1.17
         1.18
         1.18
         1.19
         1.2
         1.2
         1.21
         1.21
         1.22
         1.22
         1.23
         1.24
         1.24
         1.25
         1.25
         1.26
         1.27
         1.27
         1.28
         1.28
         1.29
         1.29
         1.3
         1.31
         1.31
         1.32
         1.32
         1.33
         1.34
         1.34
         1.35
         1.35
         1.36
         1.36
         1.37
         1.38
         1.38
         1.39
         1.39
         1.4
         1.4
         1.41
         1.42
         1.42
         1.43
         1.43
         1.44
         1.45
         1.45
         1.46
         1.46
         1.47
         1.47
         1.48
         1.49
         1.49
         1.5
         1.5
         1.51
         1.52
         1.52
         1.53
         1.53
         1.54
         1.54
         1.55
         1.56
         1.56
         1.57
         1.57
         1.58
         1.58
         1.59
         1.6
         1.6
         1.61
         1.61
         1.62
         1.63
         1.63
         1.64
         1.64
         1.65
         1.65
         1.66
         1.67
         1.67
         1.68
         1.68
         1.69
         1.7
         1.7
         1.71
         1.71
         1.72
         1.72
         1.73
         1.74
         1.74
         1.75
         1.75
         1.76
         1.76
         1.77
         1.78
         1.78
         1.79
         1.79
         1.8
         1.81
         1.81
         1.82
         1.82
         1.83
         1.83
         1.84
         1.85
         1.85
         1.86
         1.86
         1.87
         1.88
         1.88
         1.89
         1.89
         1.9
         1.9
         1.91
         1.92
         1.92
         1.93
         1.93
         1.94
         1.94
         1.95
         1.96
         1.96
         1.97
         1.97
         1.98
         1.99
         1.99
         2.0
         2.0
         2.01
         2.01
         2.02
         2.03
         2.03
         2.04
         2.04
         2.05
         2.05
         2.06
         2.07
         2.07
         2.08
         2.08
         2.09
         2.1
         2.1
         2.11
         2.11
         2.12
         2.12
         2.13
         2.14
         2.14
         2.15
         2.15
         2.16
         2.17
         2.17
         2.18
         2.18
         2.19
         2.19
         2.2
         2.21
         2.21
         2.22
         2.22
         2.23
         2.23
         2.24
         2.25
         2.25
         2.26
         2.26
         2.27
         2.28
         2.28
         2.29
         2.29
         2.3
         2.3
         2.31
         2.32
         2.32
         2.33
         2.33
         2.34
         2.35
         2.35
         2.36
         2.36
         2.37
         2.37
         2.38
         2.39
         2.39
         2.4
         2.4
         2.41
         2.41
         2.42
         2.43
         2.43
         2.44
         2.44
         2.45
         2.46
         2.46
         2.47
         2.47
         2.48
         2.48
         2.49
         2.5))
       (:y-points
        (:list
         132.2
         132.13
         131.98
         131.98
         132.02
         132.57
         132.61
         132.66
         132.66
         132.56
         132.5
         132.21
         132.16
         132.03
         132.0
         131.96
         131.94
         131.94
         131.92
         131.85
         131.85
         131.88
         131.89
         131.88
         131.89
         131.87
         131.89
         131.82
         131.79
         131.79
         131.79
         98.7
         98.7
         296.16
         296.18
         296.4
         296.5
         296.52
         296.52
         296.44
         296.43
         296.4
         296.4
         296.4
         296.4
         131.4
         131.18
         131.18
         296.21
         296.21
         296.12
         295.97
         295.97
         295.98
         296.0
         296.06
         296.06
         296.02
         296.01
         295.96
         295.96
         295.96
         295.99
         296.12
         296.12
         295.87
         295.87
         148.32
         148.15
         147.42
         147.42
         147.62
         147.68
         147.78
         147.88
         147.98
         147.98
         147.98
         148.04
         148.11
         148.11
         148.11
         148.09
         148.09
         148.1
         148.1
         148.1
         147.81
         147.81
         147.87
         148.1
         148.1
         148.06
         148.06
         148.02
         148.07
         148.11
         148.16
         148.13
         148.16
         148.2
         148.2
         148.18
         148.18
         148.19
         148.19
         148.19
         148.14
         148.09
         148.0
         148.0
         148.0
         147.98
         147.96
         147.94
         147.94
         148.01
         148.03
         148.03
         147.93
         147.93
         147.99
         148.86
         148.86
         148.84
         148.0
         148.0
         148.0
         148.0
         147.93
         147.92
         147.92
         147.88
         147.88
         147.88
         147.84
         146.51
         146.51
         147.78
         147.82
         147.98
         147.99
         147.98
         147.86
         147.84
         147.84
         147.97
         147.97
         147.95
         147.89
         147.79
         110.5
         110.5
         147.81
         147.81
         147.82
         147.63
         110.41
         110.41
         147.85
         147.89
         147.91
         147.89
         147.77
         147.77
         147.78
         147.8
         148.04
         148.1
         148.04
         147.47
         147.47
         148.24
         148.24
         148.22
         148.16
         148.08
         148.08
         148.02
         148.02
         148.05
         148.05
         148.04
         148.01
         147.86
         147.86
         147.91
         147.91
         147.91
         147.89
         147.89
         147.91
         147.91
         147.93
         147.94
         148.06
         148.07
         148.11
         148.07
         148.0
         148.0
         148.0
         147.98
         147.98
         148.07
         148.07
         148.05
         148.05
         148.1
         148.23
         148.29
         148.32
         148.32
         148.32
         148.32
         148.34
         148.35
         148.37
         148.37
         148.26
         148.26
         148.29
         148.29
         148.29
         148.28
         148.23
         148.21
         148.21
         148.21
         148.21
         148.09
         148.09
         148.19
         148.19
         148.21
         148.21
         148.21
         148.21
         148.27
         148.27
         148.28
         148.34
         148.37
         148.37
         148.4
         148.39
         148.39
         148.35
         148.32
         148.3
         148.3
         148.26
         148.24
         148.24
         148.24
         148.23
         148.31
         148.24
         148.24
         148.15
         148.13
         148.1
         148.08
         148.08
         148.02
         148.0
         147.98
         147.98
         147.98
         148.01
         148.02
         148.02
         148.02
         147.98
         147.98
         148.04
         148.04
         148.04
         148.1
         148.15
         148.29
         148.3
         148.35
         148.37
         148.38
         148.39
         148.42
         148.42
         148.44
         148.42
         148.44
         148.44
         148.44
         148.56
         148.56
         148.42
         148.42
         148.48
         148.49
         148.49
         148.5
         148.5
         148.48
         148.42
         148.48
         148.46
         148.51
         148.55
         148.55
         148.52
         148.52
         148.46
         148.52
         148.46
         148.49
         148.49
         148.49
         110.35
         110.35
         148.33
         148.33
         148.28
         148.27
         148.18
         148.09
         148.05
         148.09
         148.14
         148.15
         148.15
         148.27
         148.3
         148.27
         148.28
         148.27
         148.25
         148.22
         148.22
         148.28
         148.3
         148.3
         148.26
         110.38
         147.41
         147.41
         147.41
         110.5
         110.5
         110.52
         110.52
         110.53
         110.48
         110.57
         110.57
         147.43
         148.29
         147.43
         110.53
         110.53
         110.56
         110.56
         110.72
         110.72
         110.56
         110.46
         110.44
         110.44
         110.52
         110.52
         110.52
         110.5
         110.57
         110.5
         73.98
         73.93
         73.93
         73.95
         73.95
         73.94
         73.93
         73.93
         73.93
         73.93
         73.94
         73.94
         73.94
         110.74
         73.87
         110.8
         110.8
         110.82
         110.88
         110.9
         110.9
         110.72
         110.72
         146.67
         146.79
         146.79
         146.34
         146.34
         147.18
         147.58
         147.64
         147.64
         147.44
         147.44
         147.45
         147.51
         147.77
         147.77
         147.75
         147.73
         147.65
         0.0
         0.0
         0.0
         0.0
         0.0
         0.0
         0.0
         0.0
         0.0))))
     (:add-slots ((:name "BPF")))))
   (:id 4))
  (:box
   (:type :object)
   (:reference sdiffile)
   (:group-id nil)
   (:name "a01-cut.sdif")
   (:x 442)
   (:y 250)
   (:w 103)
   (:h 62)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :text)
   (:showname t)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil)))
   (:outputs (:output (:name "SELF") (:reactive nil)))
   (:window (:size (500 500)) (:position (358 345)))
   (:edition-params)
   (:value
    (:object
     (:class sdiffile)
     (:add-slots ((:file-map nil) (:file-pathname nil)))))
   (:id 5))
  (:comment
   (:x 384)
   (:y 113)
   (:w 332)
   (:h 127)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Calibri") (:size 14) (:style :plain)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "Reads SDIF data and formats results as a BPF.

Default values are suited to read and convert 1FQ0 frame and matrix types, typically resulting from fundamental frequency analysis.
Other type of data can be extracted by setting the optional inputs.")
   (:id 6))
  (:comment
   (:x 195)
   (:y 479)
   (:w 75)
   (:h 25)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Calibri") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "CHORDS")
   (:id 7))
  (:box
   (:type :function)
   (:reference sec->ms)
   (:group-id nil)
   (:name "sec->ms")
   (:x 55)
   (:y 375.0)
   (:w 86)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "N") (:value 0) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 8))
  (:box
   (:type :object)
   (:reference sdiffile)
   (:group-id nil)
   (:name "africa.mrk.sdif")
   (:x 84)
   (:y 248)
   (:w 178)
   (:h 62)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :text)
   (:showname t)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil)))
   (:outputs (:output (:name "SELF") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class sdiffile)
     (:add-slots ((:file-map nil) (:file-pathname nil)))))
   (:id 9))
  (:box
   (:type :function)
   (:reference getsdifchords)
   (:group-id nil)
   (:name "getsdifchords")
   (:x 0)
   (:y 638)
   (:w 111)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:type :function)
   (:reference sdif->bpf)
   (:group-id nil)
   (:name "sdif->bpf")
   (:x 448)
   (:y 322)
   (:w 91)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 11))
  (:box
   (:type :function)
   (:reference sdif->markers)
   (:group-id nil)
   (:name "sdif->markers")
   (:x 40)
   (:y 329.0)
   (:w 116)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 12))
  (:box
   (:type :function)
   (:reference sdif->chord-seq)
   (:group-id nil)
   (:name "sdif->chord-seq")
   (:x 370)
   (:y 588)
   (:w 129)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 13))
  (:comment
   (:x 61)
   (:y 38)
   (:w 404)
   (:h 30)
   (:fgcolor (:color 0.19215687 0.2627451 0.42352942 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Calibri") (:size 18) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "Make objects and data from SDIF files")
   (:id 14))
  (:comment
   (:x 34)
   (:y 99)
   (:w 63)
   (:h 25)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Calibri") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "Markers")
   (:id 15))
  (:comment
   (:x 31)
   (:y 120)
   (:w 333)
   (:h 127)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Calibri") (:size 14) (:style :plain)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "Reads SDIF times and formats results as a list of time markers (in s).

Default values read 1MRK frames, typically resulting from markers or transient detection analyses. More specific type of data can be extracted by setting the optional inputs.")
   (:id 16)))
 (:connections
  (:connection (:from (:box 5 :out 0)) (:to (:box 11 :in 0)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 0)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 12 :in 0)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 13 :in 0)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 4 :in 0)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 8 :in 0)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 1 :in 0)))))