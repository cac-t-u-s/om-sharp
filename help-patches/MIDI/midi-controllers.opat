
(:patch
 (:name "midi-controllers")
 (:doc "")
 (:info
  (:created "2019/09/30 10:18:03")
  (:modified "2022/03/19 23:46:53")
  (:by "om-sharp")
  (:version 1.05))
 (:window (:size (941 633)) (:position (506 122)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :abstraction)
   (:reference
    (:sequencer
     (:name "sequencer")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (800 500)) (:position (189 184)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :object)
       (:reference bpf)
       (:group-id 1)
       (:name nil)
       (:x 0)
       (:y 33)
       (:w 3000)
       (:h -33)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock :locked)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "X-POINTS")
         (:value (:list 0 2000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "Y-POINTS")
         (:value (:list 0 100))
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "X-POINTS") (:reactive nil))
        (:output (:name "Y-POINTS") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class bpf)
         (:slots
          ((:onset 0)
           (:duration 3000)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:action :internal-lambda)
           (:color (:color 0.0 0.0 0.0 1.0))
           (:decimals 0)
           (:x-points
            (:list
             0
             61
             122
             184
             245
             306
             367
             429
             490
             551
             612
             673
             735
             796
             857
             918
             980
             1041
             1102
             1163
             1224
             1286
             1347
             1408
             1469
             1531
             1592
             1653
             1714
             1776
             1837
             1898
             1959
             2020
             2082
             2143
             2204
             2265
             2327
             2388
             2449
             2510
             2571
             2633
             2694
             2755
             2816
             2878
             2939
             3000))
           (:y-points
            (:list
             64
             65
             67
             68
             69
             70
             72
             73
             74
             76
             77
             78
             79
             81
             82
             83
             85
             86
             87
             88
             90
             91
             92
             94
             95
             96
             97
             99
             100
             101
             103
             104
             105
             106
             108
             109
             110
             112
             113
             114
             115
             117
             118
             119
             121
             122
             123
             124
             126
             127))))
         (:add-slots ((:name "BPF")))))
       (:value
        (:object
         (:class bpf)
         (:slots
          ((:onset 0)
           (:duration 3000)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:action :internal-lambda)
           (:color (:color 0.0 0.0 0.0 1.0))
           (:decimals 0)
           (:x-points
            (:list
             0
             61
             122
             184
             245
             306
             367
             429
             490
             551
             612
             673
             735
             796
             857
             918
             980
             1041
             1102
             1163
             1224
             1286
             1347
             1408
             1469
             1531
             1592
             1653
             1714
             1776
             1837
             1898
             1959
             2020
             2082
             2143
             2204
             2265
             2327
             2388
             2449
             2510
             2571
             2633
             2694
             2755
             2816
             2878
             2939
             3000))
           (:y-points
            (:list
             64
             65
             67
             68
             69
             70
             72
             73
             74
             76
             77
             78
             79
             81
             82
             83
             85
             86
             87
             88
             90
             91
             92
             94
             95
             96
             97
             99
             100
             101
             103
             104
             105
             106
             108
             109
             110
             112
             113
             114
             115
             117
             118
             119
             121
             122
             123
             124
             126
             127))))
         (:add-slots ((:name "BPF")))))
       (:id 0))
      (:box
       (:type :object)
       (:reference midi-mix-console)
       (:group-id 2)
       (:name nil)
       (:x 0)
       (:y 66)
       (:w 1000)
       (:h -33)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :text)
       (:showname nil)
       (:lock :locked)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "SELF") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class midi-mix-console)
         (:slots
          ((:onset 0)
           (:item-internal-time nil)
           (:item-type nil)
           (:attributes nil)))
         (:add-slots ((:midiport nil)))))
       (:value
        (:object
         (:class midi-mix-console)
         (:slots
          ((:onset 0)
           (:item-internal-time nil)
           (:item-type nil)
           (:attributes nil)))
         (:add-slots ((:midiport nil)))))
       (:id 1))
      (:box
       (:type :object)
       (:reference chord-seq)
       (:group-id 3)
       (:name nil)
       (:x 0)
       (:y 99)
       (:w 11000)
       (:h -33)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock :locked)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LMIDIC")
         (:value (:list (:list 6000)))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LONSET")
         (:value (:list 0 1000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LDUR")
         (:value (:list (:list 1000)))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LVEL")
         (:value 100)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "LMIDIC") (:reactive nil))
        (:output (:name "LONSET") (:reactive nil))
        (:output (:name "LDUR") (:reactive nil))
        (:output (:name "LVEL") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class chord-seq)
         (:slots
          ((:onset 0)
           (:duration 11000)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:name "CHORD-SEQ")
           (:default-frame-type chord)
           (:symbolic-date nil)
           (:symbolic-dur nil)
           (:symbolic-dur-extent 0)
           (:extras nil)
           (:group-ids nil)
           (:lmidic (:list 6000))
           (:lonset
            (:list
             0
             1000
             2000
             3000
             4000
             5000
             6000
             7000
             8000
             9000
             10000
             11000))
           (:ldur (:list 1000))
           (:lvel (:list 100))
           (:loffset (:list 0))
           (:lchan (:list 1))
           (:lport (:list nil))
           (:llegato nil)))))
       (:value
        (:object
         (:class chord-seq)
         (:slots
          ((:onset 0)
           (:duration 11000)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:name "CHORD-SEQ")
           (:default-frame-type chord)
           (:symbolic-date nil)
           (:symbolic-dur nil)
           (:symbolic-dur-extent 0)
           (:extras nil)
           (:group-ids nil)
           (:lmidic (:list 6000))
           (:lonset
            (:list
             0
             1000
             2000
             3000
             4000
             5000
             6000
             7000
             8000
             9000
             10000
             11000))
           (:ldur (:list 1000))
           (:lvel (:list 100))
           (:loffset (:list 0))
           (:lchan (:list 1))
           (:lport (:list nil))
           (:llegato nil)))))
       (:id 2)))
     (:connections)
     (:range (:x1 0 :x2 11000 :y1 -10 :y2 110))
     (:control-patch
      (:patch
       (:name "Control Patch")
       (:doc "")
       (:info (:created nil) (:modified nil) (:by nil) (:version nil))
       (:window (:size nil) (:position nil))
       (:grid nil)
       (:lock nil)
       (:boxes
        (:box
         (:type :io)
         (:reference
          (:in
           (:type omsequencein)
           (:index 0)
           (:name "CONTAINER-SEQUENCE")
           (:doc "")))
         (:group-id nil)
         (:name "CONTAINER-SEQUENCE")
         (:x 150)
         (:y 12)
         (:w 147)
         (:h 42)
         (:color
          (:color-or-nil
           (:color (:color 1.0 1.0 1.0 0.0))
           (:t-or-nil t)))
         (:border 0)
         (:roundness 0)
         (:text-font nil)
         (:align :center)
         (:icon :top)
         (:reactive nil)
         (:inputs)
         (:outputs (:output (:name "out") (:reactive nil)))
         (:id 0))
        (:box
         (:type :io)
         (:reference
          (:out (:type omout) (:name "out") (:index 1) (:doc "")))
         (:group-id nil)
         (:name "out")
         (:x 150)
         (:y 200)
         (:w 40)
         (:h 42)
         (:color
          (:color-or-nil
           (:color (:color 1.0 1.0 1.0 0.0))
           (:t-or-nil t)))
         (:border 0)
         (:roundness 0)
         (:text-font nil)
         (:align :center)
         (:icon :top)
         (:reactive nil)
         (:inputs
          (:input
           (:type :standard)
           (:name "out-value")
           (:value nil)
           (:reactive nil)))
         (:outputs)
         (:id 1))
        (:comment
         (:x 10)
         (:y 40)
         (:w 120)
         (:h 162)
         (:fgcolor nil)
         (:bgcolor nil)
         (:border nil)
         (:roundness nil)
         (:text-font nil)
         (:align nil)
         (:text
          "This patch is a general controller for the sequencer...

Additional inputs/outputs are accesses on the sequencer box.
")
         (:id 2)))
       (:connections
        (:connection (:from (:box 0 :out 0)) (:to (:box 1 :in 0))))))
     (:loop-interval nil)
     (:loop-on nil)
     (:view-mode :tracks)
     (:control-patch-visible-p nil)))
   (:group-id nil)
   (:name "sequencer")
   (:x 328)
   (:y 537)
   (:w 141)
   (:h 83)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:pre-delay 0)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "time")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "objs")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 0))
  (:box
   (:type :function)
   (:reference om-sample)
   (:group-id nil)
   (:name "om-sample")
   (:x 68)
   (:y 256)
   (:w 100)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "NBS-SR")
     (:value 1)
     (:reactive nil)))
   (:outputs
    (:output (:name "out0") (:reactive nil))
    (:output (:name "out1") (:reactive nil))
    (:output (:name "out2") (:reactive nil)))
   (:id 1))
  (:box
   (:type :object)
   (:reference midi-mix-console)
   (:group-id nil)
   (:name "MIDI-MIX-CONSOLE")
   (:x 368)
   (:y 316)
   (:w 111)
   (:h 83)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:showname nil)
   (:lock :locked)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "SELF") (:reactive nil)))
   (:window (:size (1408 541)) (:position (105 92)))
   (:edition-params)
   (:value
    (:object
     (:class midi-mix-console)
     (:slots
      ((:onset 0)
       (:item-internal-time nil)
       (:item-type nil)
       (:attributes nil)))
     (:add-slots ((:midiport nil)))))
   (:id 2))
  (:comment
   (:x 368)
   (:y 267)
   (:w 219)
   (:h 50)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font-or-nil (:font nil) (:t-or-nil nil)))
   (:align nil)
   (:text
    "The midi-mix-console can be used to set local/initial MIDI settings")
   (:id 3))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 397)
   (:y 492)
   (:w 64)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input (:type :optional) (:name "x") (:value nil) (:reactive nil))
    (:input (:type :optional) (:name "x") (:value nil) (:reactive nil))
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 4))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux6")
   (:x 117)
   (:y 206)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 50)
   (:id 5))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux5")
   (:x 573)
   (:y 336)
   (:w 33)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 1))
   (:id 6))
  (:box
   (:type :object)
   (:reference chord-seq)
   (:group-id nil)
   (:name "CHORD-SEQ")
   (:x 491)
   (:y 386)
   (:w 134)
   (:h 78)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value
      (:list 6000 6000 6000 6000 6000 6000 6000 6000 6000 6000 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "loffset")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil))
    (:input (:type :key) (:name "llegato") (:value 0) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "llegato") (:reactive nil)))
   (:window (:size (409 269)) (:position (507 489)))
   (:edition-params (:staff :g))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 11000)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name "CHORD-SEQ")
       (:default-frame-type chord)
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:group-ids nil)
       (:lmidic (:list 6000))
       (:lonset
        (:list
         0
         1000
         2000
         3000
         4000
         5000
         6000
         7000
         8000
         9000
         10000
         11000))
       (:ldur (:list 1000))
       (:lvel (:list 100))
       (:loffset (:list 0))
       (:lchan (:list 1))
       (:lport (:list nil))
       (:llegato nil)))))
   (:id 7))
  (:comment
   (:x 97)
   (:y 422)
   (:w 176)
   (:h 22)
   (:fgcolor (:color 23/51 16/255 16/255 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font-or-nil (:font nil) (:t-or-nil nil)))
   (:align nil)
   (:text "Ex : PitchBend Controller")
   (:id 8))
  (:comment
   (:x 45)
   (:y 23)
   (:w 251)
   (:h 27)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Consolas") (:size 16) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "MIDI Continuous Controllers")
   (:id 9))
  (:comment
   (:x 45)
   (:y 51)
   (:w 421)
   (:h 39)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font-or-nil (:font nil) (:t-or-nil nil)))
   (:align nil)
   (:text
    "MIDI continuous controllers can be manipulated as simple BPFs, setting the adequate :action to send MIDI messages.")
   (:id 10))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "send-pitchbend")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (237 282)) (:position (147 138)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 93)
       (:y 162)
       (:w 70)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "in") (:doc "")))
       (:group-id nil)
       (:name "in")
       (:x 72)
       (:y 24)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :function)
       (:reference pitchbend)
       (:group-id nil)
       (:name "pitchbend")
       (:x 87)
       (:y 119)
       (:w 92)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "VALS")
         (:value 64)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CHANS")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 126)
       (:y 82)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 3))
      (:box
       (:type :function)
       (:reference cadr)
       (:group-id nil)
       (:name "cadr")
       (:x 62)
       (:y 75)
       (:w 62)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 1)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 2 :in 0))))))
   (:group-id nil)
   (:name "send-pitchbend")
   (:x 215)
   (:y 256)
   (:w 123)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:pre-delay 0)
   (:lock nil)
   (:lambda :lambda)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 11))
  (:box
   (:type :object)
   (:reference bpf)
   (:group-id nil)
   (:name nil)
   (:x 64)
   (:y 321)
   (:w 168)
   (:h 96)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "X-POINTS")
     (:value (:list 0 2000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-POINTS")
     (:value (:list 0 100))
     (:reactive nil))
    (:input (:type :key) (:name "decimals") (:value 2) (:reactive nil))
    (:input
     (:type :key)
     (:name "action")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "X-POINTS") (:reactive nil))
    (:output (:name "Y-POINTS") (:reactive nil))
    (:output (:name "decimals") (:reactive nil))
    (:output (:name "action") (:reactive nil)))
   (:window (:size (598 400)) (:position (168 161)))
   (:edition-params)
   (:value
    (:object
     (:class bpf)
     (:slots
      ((:onset 0)
       (:duration 3000)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:action :internal-lambda)
       (:color (:color 0.0 0.0 0.0 1.0))
       (:decimals 0)
       (:x-points
        (:list
         0
         61
         122
         184
         245
         306
         367
         429
         490
         551
         612
         673
         735
         796
         857
         918
         980
         1041
         1102
         1163
         1224
         1286
         1347
         1408
         1469
         1531
         1592
         1653
         1714
         1776
         1837
         1898
         1959
         2020
         2082
         2143
         2204
         2265
         2327
         2388
         2449
         2510
         2571
         2633
         2694
         2755
         2816
         2878
         2939
         3000))
       (:y-points
        (:list
         64
         65
         67
         68
         69
         70
         72
         73
         74
         76
         77
         78
         79
         81
         82
         83
         85
         86
         87
         88
         90
         91
         92
         94
         95
         96
         97
         99
         100
         101
         103
         104
         105
         106
         108
         109
         110
         112
         113
         114
         115
         117
         118
         119
         121
         122
         123
         124
         126
         127))))
     (:add-slots ((:name "BPF")))))
   (:id 12))
  (:comment
   (:x 368)
   (:y 123)
   (:w 232)
   (:h 64)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font-or-nil (:font nil) (:t-or-nil nil)))
   (:align nil)
   (:text
    "One of the default actions in the BPF editor is 'midi-controller' : it allows setting the action to a MIDI continuous controller")
   (:id 13))
  (:box
   (:type :function)
   (:reference midi-control-change)
   (:group-id nil)
   (:name "midi-control-change")
   (:x 729)
   (:y 163)
   (:w 153)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "CTRL")
     (:value 12)
     (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 14))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 779)
   (:y 202)
   (:w 51)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs
    (:input (:type :optional) (:name "in") (:value nil) (:reactive t)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 12)
   (:id 15))
  (:comment
   (:x 698)
   (:y 202)
   (:w 74)
   (:h 36)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font-or-nil (:font nil) (:t-or-nil nil)))
   (:align nil)
   (:text "controller number:")
   (:id 16))
  (:box
   (:type :function)
   (:reference bpf-scale)
   (:group-id nil)
   (:name "bpf-scale")
   (:x 162)
   (:y 207)
   (:w 112)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input (:type :key) (:name "y1") (:value 0) (:reactive nil))
    (:input (:type :key) (:name "y2") (:value 100) (:reactive nil))
    (:input (:type :key) (:name "x1") (:value 0) (:reactive nil))
    (:input (:type :key) (:name "x2") (:value 100) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 17))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 179)
   (:y 149)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 64)
   (:id 18))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 195)
   (:y 118)
   (:w 36)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 127)
   (:id 19))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 215)
   (:y 181)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0)
   (:id 20))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 229)
   (:y 149)
   (:w 42)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3000)
   (:id 21))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 157)
   (:y 287)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0)
   (:id 22))
  (:box
   (:type :object)
   (:reference bpf)
   (:group-id nil)
   (:name nil)
   (:x 69)
   (:y 120)
   (:w 104)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock :locked)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "X-POINTS")
     (:value (:list 0 2000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-POINTS")
     (:value (:list 0 100))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "X-POINTS") (:reactive nil))
    (:output (:name "Y-POINTS") (:reactive nil)))
   (:window (:size (557 400)) (:position (536 518)))
   (:edition-params)
   (:value
    (:object
     (:class bpf)
     (:slots
      ((:onset 0)
       (:duration 2000.0)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:action nil)
       (:color (:color 0.0 0.0 0.0 1.0))
       (:decimals 2)
       (:x-points (:list 0.0 2000.0))
       (:y-points (:list 0.0 100.0))))
     (:add-slots ((:name "BPF")))))
   (:id 23)))
 (:connections
  (:connection (:from (:box 1 :out 1)) (:to (:box 12 :in 1)))
  (:connection (:from (:box 1 :out 2)) (:to (:box 12 :in 2)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 4 :in 1)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 0 :in 1)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 1 :in 1)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 7 :in 6)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 4 :in 2)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 12 :in 4)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 4 :in 0)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 15 :in 0)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 1 :in 0)))
  (:connection (:from (:box 18 :out 0)) (:to (:box 17 :in 1)))
  (:connection (:from (:box 19 :out 0)) (:to (:box 17 :in 2)))
  (:connection (:from (:box 20 :out 0)) (:to (:box 17 :in 3)))
  (:connection (:from (:box 21 :out 0)) (:to (:box 17 :in 4)))
  (:connection (:from (:box 22 :out 0)) (:to (:box 12 :in 3)))
  (:connection (:from (:box 23 :out 0)) (:to (:box 17 :in 0)))))