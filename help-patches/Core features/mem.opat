
(:patch
 (:name "mem")
 (:doc "")
 (:info
  (:created "2018/04/04 15:15:06")
  (:modified "2020/07/14 23:19:47")
  (:by "om-sharp")
  (:version 1.0))
 (:window (:size (1058 828)) (:position (1801 -610)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :function)
   (:reference om-random)
   (:group-id nil)
   (:name "om-random")
   (:x 54)
   (:y 61)
   (:w 104)
   (:h 34)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "LOW") (:value 0) (:reactive nil))
    (:input
     (:type :standard)
     (:name "HIGH")
     (:value 100)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 0))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 76)
   (:y 224)
   (:w 43)
   (:h 40)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 68)
   (:id 1))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 139)
   (:y 208)
   (:w 57)
   (:h 36)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 78)
   (:id 2))
  (:box
   (:type :function)
   (:reference om-random)
   (:group-id nil)
   (:name "om-random")
   (:x 38)
   (:y 439)
   (:w 104)
   (:h 34)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "LOW") (:value 0) (:reactive nil))
    (:input
     (:type :standard)
     (:name "HIGH")
     (:value 100)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 3))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 123)
   (:y 475)
   (:w 32)
   (:h 34)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 4)
   (:id 4))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 56)
   (:y 573)
   (:w 32)
   (:h 34)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input (:type :optional) (:name "in") (:value nil) (:reactive t)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 54)
   (:id 5))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 107)
   (:y 572)
   (:w 109)
   (:h 34)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input (:type :optional) (:name "in") (:value nil) (:reactive t)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 54 82 94 72))
   (:id 6))
  (:comment
   (:x 59)
   (:y 8)
   (:w 375)
   (:h 39)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border (:number-or-nil (:number 0.0) (:t-or-nil t)))
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Verdana") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "MEM: a box with \"memory\" which keeps track of results from previous evaluations")
   (:id 7))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 99)
   (:y 108)
   (:w 32)
   (:h 34)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 68)
   (:id 8))
  (:comment
   (:x 37)
   (:y 326)
   (:w 223)
   (:h 50)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "Left outlet = get new value
Right outlet = previous value")
   (:id 9))
  (:box
   (:type :function)
   (:reference om-random)
   (:group-id nil)
   (:name "om-random")
   (:x 289)
   (:y 70)
   (:w 104)
   (:h 34)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "LOW") (:value 0) (:reactive nil))
    (:input
     (:type :standard)
     (:name "HIGH")
     (:value 100)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 304)
   (:y 210)
   (:w 32)
   (:h 34)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 12)
   (:id 11))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 361)
   (:y 212)
   (:w 119)
   (:h 34)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 12 15 43 72))
   (:id 12))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 314)
   (:y 267)
   (:w 116)
   (:h 34)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :optional) (:name "x") (:value nil) (:reactive nil))
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 13))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 326)
   (:y 106)
   (:w 32)
   (:h 34)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 12)
   (:id 14))
  (:comment
   (:x 299)
   (:y 308)
   (:w 263)
   (:h 50)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "Left outlet = get new value
Right outlet = list of N previous values")
   (:id 15))
  (:comment
   (:x 428)
   (:y 118)
   (:w 244)
   (:h 65)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "Right inlet = size of the memory. If non-NIL, the memory will be  list of <n> previous values.")
   (:id 16))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 379)
   (:y 105)
   (:w 32)
   (:h 34)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 4)
   (:id 17))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 75)
   (:y 476)
   (:w 32)
   (:h 34)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input (:type :optional) (:name "in") (:value nil) (:reactive t)))
   (:outputs (:output (:name "value") (:reactive t)))
   (:value 54)
   (:id 18))
  (:comment
   (:x 12)
   (:y 389)
   (:w 303)
   (:h 47)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "... also works in reactive mode: evaluate the 'om-random' box")
   (:id 19))
  (:box
   (:type :interface)
   (:reference slider)
   (:group-id nil)
   (:name "slider")
   (:x 4915/12)
   (:y 749/2)
   (:w 40)
   (:h 88)
   (:color nil)
   (:border (:number-or-nil (:number 1.5) (:t-or-nil t)))
   (:roundness (:number-or-nil (:number 6) (:t-or-nil t)))
   (:min-value 0)
   (:max-value 100)
   (:increment 1)
   (:decimals 0)
   (:orientation :vertical)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive t)))
   (:value 45)
   (:id 20))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 466)
   (:y 567)
   (:w 149)
   (:h 67)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input (:type :optional) (:name "in") (:value nil) (:reactive t)))
   (:outputs (:output (:name "value") (:reactive t)))
   (:value
    (:list
     45
     48
     49
     54
     56
     57
     62
     66
     74
     79
     80
     77
     76
     74
     70
     66
     62
     56
     55
     52
     36
     35
     36
     39
     40
     38
     37
     38
     39
     41))
   (:id 21))
  (:box
   (:type :object)
   (:reference bpf)
   (:group-id nil)
   (:name nil)
   (:x 3895/12)
   (:y 1357/2)
   (:w 239)
   (:h 72)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 10) (:style :italic)))
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "X-POINTS")
     (:value (:list 0 2000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-POINTS")
     (:value (:list 0 100))
     (:reactive t)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "X-POINTS") (:reactive nil))
    (:output (:name "Y-POINTS") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class bpf)
     (:slots
      ((:onset 0)
       (:duration 58000.0)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:action nil)
       (:color (:color 0.0 0.0 0.0 1.0))
       (:decimals 2)
       (:x-points
        (:list
         0.0
         2000.0
         4000.0
         6000.0
         8000.0
         10000.0
         12000.0
         14000.0
         16000.0
         18000.0
         20000.0
         22000.0
         24000.0
         26000.0
         28000.0
         30000.0
         32000.0
         34000.0
         36000.0
         38000.0
         40000.0
         42000.0
         44000.0
         46000.0
         48000.0
         50000.0
         52000.0
         54000.0
         56000.0
         58000.0))
       (:y-points
        (:list
         45.0
         48.0
         49.0
         54.0
         56.0
         57.0
         62.0
         66.0
         74.0
         79.0
         80.0
         77.0
         76.0
         74.0
         70.0
         66.0
         62.0
         56.0
         55.0
         52.0
         36.0
         35.0
         36.0
         39.0
         40.0
         38.0
         37.0
         38.0
         39.0
         41.0))))
     (:add-slots ((:name nil)))))
   (:id 22))
  (:comment
   (:x 596)
   (:y 373)
   (:w 448)
   (:h 40)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "if size is a float, then it represents a TIME WINDOW (in seconds)")
   (:id 23))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 813)
   (:y 582)
   (:w 149)
   (:h 67)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input (:type :optional) (:name "in") (:value nil) (:reactive t)))
   (:outputs (:output (:name "value") (:reactive t)))
   (:value
    (:list
     45
     48
     49
     54
     56
     57
     62
     66
     74
     79
     80
     77
     76
     74
     70
     66
     62
     56
     55
     52
     36))
   (:id 24))
  (:box
   (:type :value)
   (:reference single-float)
   (:group-id nil)
   (:name "value box")
   (:x 816)
   (:y 440)
   (:w 33)
   (:h 34)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1.0)
   (:id 25))
  (:box
   (:type :object)
   (:reference bpf)
   (:group-id nil)
   (:name nil)
   (:x 7831/12)
   (:y 1361/2)
   (:w 239)
   (:h 72)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 10) (:style :italic)))
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "X-POINTS")
     (:value (:list 0 2000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-POINTS")
     (:value (:list 0 100))
     (:reactive t)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "X-POINTS") (:reactive nil))
    (:output (:name "Y-POINTS") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class bpf)
     (:slots
      ((:onset 0)
       (:duration 40000.0)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:action nil)
       (:color (:color 0.0 0.0 0.0 1.0))
       (:decimals 2)
       (:x-points
        (:list
         0.0
         2000.0
         4000.0
         6000.0
         8000.0
         10000.0
         12000.0
         14000.0
         16000.0
         18000.0
         20000.0
         22000.0
         24000.0
         26000.0
         28000.0
         30000.0
         32000.0
         34000.0
         36000.0
         38000.0
         40000.0))
       (:y-points
        (:list
         45.0
         48.0
         49.0
         54.0
         56.0
         57.0
         62.0
         66.0
         74.0
         79.0
         80.0
         77.0
         76.0
         74.0
         70.0
         66.0
         62.0
         56.0
         55.0
         52.0
         36.0))))
     (:add-slots ((:name nil)))))
   (:id 26))
  (:comment
   (:x 601)
   (:y 19)
   (:w 410)
   (:h 48)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "See also: COLLECT -- a variant of MEM allowing to conrol the memory initialization and state.")
   (:id 27))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 84)
   (:y 617)
   (:w 54)
   (:h 34)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :optional) (:name "x") (:value nil) (:reactive nil))
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 28))
  (:box
   (:type :special)
   (:reference mem)
   (:group-id nil)
   (:name "mem")
   (:x 106)
   (:y 152)
   (:w 51)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.7 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "data to record in memory")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "size of memory")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "current value") (:reactive nil))
    (:output (:name "previous value(s)") (:reactive nil)))
   (:id 29))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 98)
   (:y 292)
   (:w 90)
   (:h 34)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :optional) (:name "x") (:value nil) (:reactive nil))
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 30))
  (:box
   (:type :special)
   (:reference mem)
   (:group-id nil)
   (:name "mem")
   (:x 337)
   (:y 153)
   (:w 51)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.7 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "data to record in memory")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "size of memory")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "current value") (:reactive nil))
    (:output (:name "previous value(s)") (:reactive nil)))
   (:id 31))
  (:box
   (:type :special)
   (:reference mem)
   (:group-id nil)
   (:name "mem")
   (:x 79)
   (:y 520)
   (:w 51)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.7 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "data to record in memory")
     (:value nil)
     (:reactive t))
    (:input
     (:type :standard)
     (:name "size of memory")
     (:value nil)
     (:reactive t)))
   (:outputs
    (:output (:name "current value") (:reactive t))
    (:output (:name "previous value(s)") (:reactive t)))
   (:id 32))
  (:box
   (:type :special)
   (:reference mem)
   (:group-id nil)
   (:name "mem")
   (:x 738)
   (:y 507)
   (:w 80)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.7 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "data to record in memory")
     (:value nil)
     (:reactive t))
    (:input
     (:type :standard)
     (:name "size of memory")
     (:value nil)
     (:reactive t)))
   (:outputs
    (:output (:name "current value") (:reactive t))
    (:output (:name "previous value(s)") (:reactive t)))
   (:id 33))
  (:box
   (:type :special)
   (:reference mem)
   (:group-id nil)
   (:name "mem")
   (:x 424)
   (:y 519)
   (:w 51)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.7 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "data to record in memory")
     (:value nil)
     (:reactive t))
    (:input
     (:type :standard)
     (:name "size of memory")
     (:value nil)
     (:reactive t)))
   (:outputs
    (:output (:name "current value") (:reactive t))
    (:output (:name "previous value(s)") (:reactive t)))
   (:id 34))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 478)
   (:y 429)
   (:w 49)
   (:h 44)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 30)
   (:id 35)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 8 :in 0)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 30 :in 1)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 30 :in 0)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 18 :in 0)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 32 :in 1)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 28 :in 0)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 28 :in 1)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 29 :in 0)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 14 :in 0)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 13 :in 0)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 13 :in 1)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 31 :in 0)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 31 :in 1)))
  (:connection (:from (:box 18 :out 0)) (:to (:box 32 :in 0)))
  (:connection
   (:from (:box 20 :out 0))
   (:to (:box 33 :in 0))
   (:attributes (:color nil :style nil :modif (0 14/109))))
  (:connection (:from (:box 20 :out 0)) (:to (:box 34 :in 0)))
  (:connection (:from (:box 21 :out 0)) (:to (:box 22 :in 2)))
  (:connection (:from (:box 24 :out 0)) (:to (:box 26 :in 2)))
  (:connection (:from (:box 25 :out 0)) (:to (:box 33 :in 1)))
  (:connection (:from (:box 29 :out 0)) (:to (:box 1 :in 0)))
  (:connection (:from (:box 29 :out 1)) (:to (:box 2 :in 0)))
  (:connection (:from (:box 31 :out 0)) (:to (:box 11 :in 0)))
  (:connection (:from (:box 31 :out 1)) (:to (:box 12 :in 0)))
  (:connection (:from (:box 32 :out 0)) (:to (:box 5 :in 0)))
  (:connection (:from (:box 32 :out 1)) (:to (:box 6 :in 0)))
  (:connection (:from (:box 33 :out 1)) (:to (:box 24 :in 0)))
  (:connection (:from (:box 34 :out 1)) (:to (:box 21 :in 0)))
  (:connection (:from (:box 35 :out 0)) (:to (:box 34 :in 1)))))