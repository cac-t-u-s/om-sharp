
(:patch
 (:name "sound-info")
 (:doc "")
 (:info
  (:created "2019/09/23 10:03:48")
  (:modified "2021/10/03 16:49:26")
  (:by "om-sharp")
  (:version 1.05))
 (:window (:size (875 351)) (:position (354 345)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :function)
   (:reference sound-dur-ms)
   (:group-id nil)
   (:name "sound-dur-ms")
   (:x 457)
   (:y 190)
   (:w 118)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SOUND")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 0))
  (:box
   (:type :object)
   (:reference sound)
   (:group-id nil)
   (:name "Bassclarinet2.aif")
   (:x 184)
   (:y 98)
   (:w 260)
   (:h 67)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock :locked)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "file-pathname")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "n-samples")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "sample-rate")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "n-channels")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "file-pathname") (:reactive t))
    (:output (:name "n-samples") (:reactive t))
    (:output (:name "sample-rate") (:reactive t))
    (:output (:name "n-channels") (:reactive t)))
   (:window (:size (650 200)) (:position (400 414)))
   (:edition-params)
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 0)
       (:n-samples nil)
       (:n-channels nil)
       (:sample-rate nil)
       (:smpl-type :float)
       (:sample-size 16)))
     (:add-slots
      ((:markers nil)
       (:gain 1.0)
       (:access-from-file nil)
       (:file-pathname nil)))))
   (:id 1))
  (:comment
   (:x 124)
   (:y 21)
   (:w 131)
   (:h 30)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Calibri") (:size 18) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "SOUND info")
   (:id 2))
  (:comment
   (:x 277)
   (:y 12)
   (:w 378)
   (:h 59)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border (:number-or-nil (:number 0.0) (:t-or-nil t)))
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Calibri") (:size 14) (:style :plain)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "Information such as file-name, sample rate, size and number of channels of a sound can be read from the box optional inputs, or using deficated accessor functions.")
   (:id 3))
  (:comment
   (:x 25)
   (:y 116)
   (:w 145)
   (:h 25)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border (:number-or-nil (:number 0.0) (:t-or-nil t)))
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Calibri") (:size 14) (:style :plain)))
     (:t-or-nil t)))
   (:align nil)
   (:text "Load / lock the SOUND.")
   (:id 4))
  (:box
   (:type :value)
   (:reference null)
   (:group-id nil)
   (:name "value box")
   (:x 99)
   (:y 219)
   (:w 155)
   (:h 58)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs
    (:input (:type :optional) (:name "in") (:value nil) (:reactive t)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value nil)
   (:id 5))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 270)
   (:y 232)
   (:w 78)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs
    (:input (:type :optional) (:name "in") (:value nil) (:reactive t)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 2132501)
   (:id 6))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 329)
   (:y 194)
   (:w 55)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs
    (:input (:type :optional) (:name "in") (:value nil) (:reactive t)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 44100)
   (:id 7))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 389)
   (:y 229)
   (:w 42)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs
    (:input (:type :optional) (:name "in") (:value nil) (:reactive t)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 4)
   (:id 8))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 482)
   (:y 235)
   (:w 69)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 48356)
   (:id 9))
  (:box
   (:type :function)
   (:reference sound-dur)
   (:group-id nil)
   (:name "sound-dur")
   (:x 587)
   (:y 190)
   (:w 96)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SOUND")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:type :value)
   (:reference single-float)
   (:group-id nil)
   (:name "value box")
   (:x 597)
   (:y 234)
   (:w 77)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 48.356034)
   (:id 11))
  (:box
   (:type :function)
   (:reference sound-rms)
   (:group-id nil)
   (:name "sound-rms")
   (:x 697)
   (:y 190)
   (:w 98)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "S")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 12))
  (:box
   (:type :value)
   (:reference single-float)
   (:group-id nil)
   (:name "value box")
   (:x 704)
   (:y 235)
   (:w 84)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0.04458128)
   (:id 13)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 9 :in 0)))
  (:connection
   (:from (:box 1 :out 0))
   (:to (:box 0 :in 0))
   (:attributes (:color nil :style nil :modif (0 0))))
  (:connection (:from (:box 1 :out 0)) (:to (:box 10 :in 0)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 12 :in 0)))
  (:connection (:from (:box 1 :out 1)) (:to (:box 5 :in 0)))
  (:connection (:from (:box 1 :out 2)) (:to (:box 6 :in 0)))
  (:connection (:from (:box 1 :out 3)) (:to (:box 7 :in 0)))
  (:connection (:from (:box 1 :out 4)) (:to (:box 8 :in 0)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 11 :in 0)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 13 :in 0)))))