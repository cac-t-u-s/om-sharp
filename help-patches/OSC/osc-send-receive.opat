
(:patch
 (:name "osc-send-receive")
 (:doc "")
 (:info
  (:created "2017/03/05 16:40:15")
  (:modified "2021/06/13 23:38:33")
  (:by "om-sharp")
  (:version 1.0301))
 (:window (:size (946 587)) (:position (346 155)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:comment
   (:x 315)
   (:y 203)
   (:w 130)
   (:h 68)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "Activate / deactivate with 'R' to start/stop the OSC-REVEIVE process")
   (:id 0))
  (:box
   (:type :function)
   (:reference osc-send)
   (:group-id nil)
   (:name "osc-send")
   (:x 44)
   (:y 169)
   (:w 88)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "BUNDLE")
     (:value (:list "/test" 0))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "HOST")
     (:value "127.0.0.1")
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "PORT")
     (:value 3000)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 1))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 27)
   (:y 134)
   (:w 67)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list "/test" 0))
   (:id 2))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 117)
   (:y 134)
   (:w 42)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3000)
   (:id 3))
  (:comment
   (:x 27)
   (:y 205)
   (:w 144)
   (:h 38)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "EVAL to send OSC messages")
   (:id 4))
  (:comment
   (:x 273)
   (:y 33)
   (:w 268)
   (:h 37)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border (:number-or-nil (:number 0.0) (:t-or-nil t)))
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Calibri") (:size 24) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "OSC send - receive - route")
   (:id 5))
  (:comment
   (:x 607)
   (:y 131)
   (:w 282)
   (:h 68)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "OSC-receive can be used in \"reactive\" mode, sending received messages down, or initialized with a lambda patch or function on its 2nd input to process incoming messages...")
   (:id 6))
  (:box
   (:type :function)
   (:reference osc-send)
   (:group-id nil)
   (:name "osc-send")
   (:x 41)
   (:y 520)
   (:w 88)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "BUNDLE")
     (:value (:list "/test" 0))
     (:reactive t))
    (:input
     (:type :standard)
     (:name "HOST")
     (:value "127.0.0.1")
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "PORT")
     (:value 3000)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:box
   (:type :object)
   (:reference osc-bundle)
   (:group-id nil)
   (:name nil)
   (:x 42)
   (:y 453)
   (:w 80)
   (:h 50)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ONSET")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MESSAGES")
     (:value nil)
     (:reactive t)))
   (:outputs
    (:output (:name "SELF") (:reactive t))
    (:output (:name "ONSET") (:reactive nil))
    (:output (:name "MESSAGES") (:reactive nil)))
   (:window (:size (210 500)) (:position (140 138)))
   (:edition-params)
   (:value
    (:object
     (:class osc-bundle)
     (:slots
      ((:onset 0)
       (:item-internal-time nil)
       (:item-type nil)
       (:attributes nil)
       (:messages (:list (:list "/pitch" 70)))))))
   (:id 8))
  (:box
   (:type :function)
   (:reference osc-msg)
   (:group-id nil)
   (:name "osc-msg")
   (:x 95)
   (:y 410)
   (:w 85)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ADDRESS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DATA")
     (:value nil)
     (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 9))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 89)
   (:y 375)
   (:w 59)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "/pitch")
   (:id 10))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 140)
   (:y 343)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive t)))
   (:value 70)
   (:id 11))
  (:comment
   (:x 184)
   (:y 331)
   (:w 102)
   (:h 53)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "click/drag to set and send a new MIDI pitch")
   (:id 12))
  (:comment
   (:x 20)
   (:y 329)
   (:w 100)
   (:h 23)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Reactive mode:")
   (:id 13))
  (:box
   (:type :function)
   (:reference osc-receive)
   (:group-id nil)
   (:name "osc-receive")
   (:x 477)
   (:y 171)
   (:w 100)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "PORT")
     (:value 3000)
     (:reactive t))
    (:input
     (:type :standard)
     (:name "MSG-PROCESSING")
     (:value nil)
     (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 14))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 479)
   (:y 136)
   (:w 46)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3000)
   (:id 15))
  (:box
   (:type :function)
   (:reference osc-route)
   (:group-id nil)
   (:name "osc-route")
   (:x 499)
   (:y 243)
   (:w 91)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "MESSAGE")
     (:value nil)
     (:reactive t))
    (:input
     (:type :optional)
     (:name "test")
     (:value :default)
     (:reactive t)))
   (:outputs
    (:output (:name "out") (:reactive t))
    (:output (:name "test1") (:reactive t)))
   (:id 16))
  (:box
   (:type :value)
   (:reference symbol)
   (:group-id nil)
   (:name "value box")
   (:x 527)
   (:y 208)
   (:w 59)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value /pitch)
   (:id 17))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 529)
   (:y 287)
   (:w 55)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input (:type :optional) (:name "in") (:value nil) (:reactive t)))
   (:outputs (:output (:name "value") (:reactive t)))
   (:value (:list 70))
   (:id 18))
  (:box
   (:type :function)
   (:reference car)
   (:group-id nil)
   (:name "car")
   (:x 530)
   (:y 329)
   (:w 54)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "X") (:value nil) (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 19))
  (:box
   (:type :function)
   (:reference om*)
   (:group-id nil)
   (:name "om*")
   (:x 539)
   (:y 388)
   (:w 60)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "ARG1") (:value 0) (:reactive t))
    (:input
     (:type :standard)
     (:name "ARG2")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 20))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 565)
   (:y 353)
   (:w 39)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 100)
   (:id 21))
  (:box
   (:type :object)
   (:reference note)
   (:group-id nil)
   (:name nil)
   (:x 511)
   (:y 428)
   (:w 94)
   (:h 80)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MIDIC")
     (:value 6000)
     (:reactive t))
    (:input
     (:type :standard)
     (:name "VEL")
     (:value 100)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DUR")
     (:value 1000)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CHAN")
     (:value 1)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "MIDIC") (:reactive nil))
    (:output (:name "VEL") (:reactive nil))
    (:output (:name "DUR") (:reactive nil))
    (:output (:name "CHAN") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class note)
     (:slots
      ((:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:group-ids nil)
       (:midic 7000)
       (:vel 100)
       (:dur 1000)
       (:chan 1)
       (:port nil)
       (:offset 0)))))
   (:id 22)))
 (:connections
  (:connection (:from (:box 2 :out 0)) (:to (:box 1 :in 0)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 1 :in 2)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 7 :in 0)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 2)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 0)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 9 :in 1)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 16 :in 0)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 14 :in 0)))
  (:connection (:from (:box 16 :out 1)) (:to (:box 18 :in 0)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 16 :in 1)))
  (:connection (:from (:box 18 :out 0)) (:to (:box 19 :in 0)))
  (:connection (:from (:box 19 :out 0)) (:to (:box 20 :in 0)))
  (:connection (:from (:box 20 :out 0)) (:to (:box 22 :in 1)))
  (:connection (:from (:box 21 :out 0)) (:to (:box 20 :in 1)))))